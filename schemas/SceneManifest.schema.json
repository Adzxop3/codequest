{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "SceneManifest",
  "title": "Scene Manifest Schema",
  "description": "D√©finit la structure d'une sc√®ne/niveau dans CodeQuest",
  "type": "object",
  "required": ["id", "act", "title", "type", "objectives", "tests", "validation"],
  "properties": {
    "id": {
      "type": "integer",
      "minimum": 1,
      "maximum": 40,
      "description": "Identifiant unique de la sc√®ne"
    },
    "act": {
      "type": "integer",
      "minimum": 1,
      "maximum": 4,
      "description": "Acte auquel appartient la sc√®ne"
    },
    "title": {
      "type": "string",
      "minLength": 5,
      "maxLength": 100,
      "description": "Titre de la sc√®ne"
    },
    "type": {
      "enum": ["core", "stretch", "boss"],
      "description": "Type de sc√®ne"
    },
    "objectives": {
      "type": "array",
      "description": "Objectifs p√©dagogiques de la sc√®ne",
      "items": {
        "type": "string",
        "minLength": 10,
        "maxLength": 200
      },
      "minItems": 1,
      "maxItems": 5
    },
    "tests": {
      "type": "array",
      "description": "Tests √† faire passer",
      "items": {
        "$ref": "#/definitions/TestSpec"
      },
      "minItems": 1,
      "maxItems": 20
    },
    "hints": {
      "type": "array",
      "description": "Indices progressifs disponibles",
      "items": {
        "$ref": "#/definitions/Hint"
      },
      "maxItems": 3
    },
    "validation": {
      "$ref": "#/definitions/ValidationCriteria"
    },
    "challenge": {
      "type": "object",
      "description": "D√©fi optionnel pour le troph√©e",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description du d√©fi"
        },
        "condition": {
          "type": "string",
          "description": "Pseudo-code de la condition de validation"
        },
        "hint": {
          "type": "string",
          "description": "Indice pour le d√©fi"
        }
      },
      "required": ["description", "condition"]
    },
    "estimatedTime": {
      "type": "integer",
      "description": "Temps estim√© en minutes",
      "minimum": 5,
      "maximum": 60
    },
    "difficulty": {
      "type": "number",
      "minimum": 0.1,
      "maximum": 1.0,
      "description": "Niveau de difficult√© (0.1=facile, 1.0=tr√®s difficile)"
    },
    "dependencies": {
      "type": "array",
      "description": "Sc√®nes pr√©requises",
      "items": {
        "type": "integer"
      }
    },
    "files": {
      "type": "object",
      "description": "Fichiers associ√©s √† la sc√®ne",
      "properties": {
        "starter": {
          "type": "string",
          "description": "Fichier de d√©part"
        },
        "solution": {
          "type": "string",
          "description": "Solution de r√©f√©rence (cach√©e)"
        },
        "tests": {
          "type": "string",
          "description": "Fichier de tests"
        },
        "readme": {
          "type": "string",
          "description": "Instructions pour l'√©tudiant"
        }
      }
    }
  },
  "definitions": {
    "TestSpec": {
      "type": "object",
      "required": ["id", "title", "type"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^test-[0-9]+$",
          "description": "Identifiant unique du test"
        },
        "title": {
          "type": "string",
          "description": "Description du test"
        },
        "type": {
          "enum": ["unit", "integration", "e2e"],
          "description": "Type de test"
        },
        "critical": {
          "type": "boolean",
          "default": false,
          "description": "Si ce test est critique pour la validation"
        },
        "points": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "Points attribu√©s pour ce test"
        },
        "timeout": {
          "type": "integer",
          "description": "Timeout en millisecondes",
          "default": 5000
        }
      }
    },
    "Hint": {
      "type": "object",
      "required": ["level", "content", "cost"],
      "properties": {
        "level": {
          "enum": ["H1", "H2", "H3"],
          "description": "Niveau d'indice (H1=l√©ger, H3=solution partielle)"
        },
        "content": {
          "type": "string",
          "minLength": 20,
          "maxLength": 1000,
          "description": "Contenu de l'indice"
        },
        "cost": {
          "type": "object",
          "properties": {
            "starEligibility": {
              "type": "boolean",
              "description": "Impact sur l'√©ligibilit√© √† l'√©toile"
            },
            "timePenalty": {
              "type": "integer",
              "description": "P√©nalit√© de temps en secondes"
            },
            "pointsPenalty": {
              "type": "integer",
              "description": "Points perdus"
            }
          }
        },
        "unlockAfter": {
          "type": "integer",
          "description": "D√©bloqu√© apr√®s X minutes",
          "minimum": 0,
          "maximum": 60
        }
      }
    },
    "ValidationCriteria": {
      "type": "object",
      "required": ["base"],
      "properties": {
        "base": {
          "type": "object",
          "description": "Crit√®res pour validation de base (‚úÖ)",
          "properties": {
            "allTestsPass": {
              "type": "boolean",
              "const": true
            },
            "noCompilationErrors": {
              "type": "boolean",
              "const": true
            },
            "minTestsPass": {
              "type": "integer",
              "description": "Nombre minimum de tests √† passer"
            }
          }
        },
        "star": {
          "type": "object",
          "description": "Crit√®res pour l'√©toile (‚≠ê)",
          "properties": {
            "timeUnder": {
              "type": "integer",
              "description": "Temps maximum en secondes"
            },
            "noHints": {
              "type": "boolean",
              "description": "Aucun indice utilis√©"
            },
            "eleganceScore": {
              "type": "number",
              "description": "Score d'√©l√©gance minimum"
            },
            "customCondition": {
              "type": "string",
              "description": "Condition personnalis√©e en pseudo-code"
            }
          }
        },
        "trophy": {
          "type": "object",
          "description": "Crit√®res pour le troph√©e (üèÜ)",
          "properties": {
            "customCondition": {
              "type": "string",
              "description": "Condition sp√©cifique au d√©fi"
            },
            "description": {
              "type": "string",
              "description": "Description du d√©fi pour l'√©tudiant"
            }
          }
        }
      }
    }
  },
  "examples": [
    {
      "id": 3,
      "act": 1,
      "title": "Variables et Types",
      "type": "core",
      "objectives": [
        "Comprendre les types de donn√©es JavaScript",
        "Ma√Ætriser la d√©claration de variables",
        "Diff√©rencier let, const et var"
      ],
      "tests": [
        {
          "id": "test-1",
          "title": "Should declare a const variable",
          "type": "unit",
          "critical": true
        },
        {
          "id": "test-2",
          "title": "Should handle type conversion",
          "type": "unit",
          "critical": false
        }
      ],
      "hints": [
        {
          "level": "H1",
          "content": "Pensez √† la diff√©rence entre const et let...",
          "cost": {
            "starEligibility": true,
            "timePenalty": 60
          }
        }
      ],
      "validation": {
        "base": {
          "allTestsPass": true,
          "noCompilationErrors": true
        },
        "star": {
          "timeUnder": 600,
          "noHints": true
        },
        "trophy": {
          "customCondition": "codeLength < 5 lines",
          "description": "Compl√©ter en moins de 5 lignes"
        }
      },
      "challenge": {
        "description": "R√©soudre en utilisant uniquement const",
        "condition": "!code.includes('let') && !code.includes('var')"
      },
      "estimatedTime": 15,
      "difficulty": 0.2
    }
  ]
}