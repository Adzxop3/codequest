{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "RetroEntry",
  "title": "Retrospective Entry Schema",
  "description": "Structure d'une entr√©e de r√©trospective quotidienne",
  "type": "object",
  "required": [
    "day",
    "student",
    "learned",
    "fuzzy",
    "question",
    "timestamp"
  ],
  "properties": {
    "id": {
      "type": "string",
      "format": "uuid",
      "description": "Identifiant unique de l'entr√©e"
    },
    "day": {
      "enum": ["J1", "J2", "J3", "J4"],
      "description": "Jour de la formation"
    },
    "student": {
      "type": "object",
      "required": ["name", "team"],
      "properties": {
        "id": {
          "type": "string",
          "description": "ID de l'√©tudiant"
        },
        "name": {
          "type": "string",
          "minLength": 2,
          "maxLength": 50,
          "description": "Nom de l'√©tudiant"
        },
        "team": {
          "type": "string",
          "description": "Nom de l'√©quipe"
        }
      }
    },
    "learned": {
      "type": "string",
      "minLength": 10,
      "maxLength": 500,
      "description": "Un concept/skill acquis aujourd'hui",
      "examples": [
        "J'ai compris la diff√©rence entre let et const",
        "Les promises ne sont plus un myst√®re",
        "Je sais maintenant utiliser async/await correctement"
      ]
    },
    "fuzzy": {
      "type": "string",
      "minLength": 10,
      "maxLength": 500,
      "description": "Un point encore flou qui n√©cessite clarification",
      "examples": [
        "La gestion des erreurs dans les promises reste confuse",
        "Je ne suis pas s√ªr de quand utiliser useEffect",
        "Les concepts de closure ne sont pas totalement clairs"
      ]
    },
    "question": {
      "type": "string",
      "minLength": 10,
      "maxLength": 500,
      "description": "Une question pour le formateur ou pour demain",
      "examples": [
        "Quelle est la meilleure pratique pour g√©rer l'√©tat global?",
        "Comment d√©bugger efficacement du code asynchrone?",
        "Peut-on avoir plus d'exemples sur les reducers?"
      ]
    },
    "mood": {
      "type": "object",
      "description": "Humeur et ressenti de la journ√©e",
      "properties": {
        "emoji": {
          "enum": ["üòä", "üòê", "üòü", "üöÄ", "üí™", "üòµ", "üéâ"],
          "description": "Emoji repr√©sentant l'humeur"
        },
        "level": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5,
          "description": "Niveau de satisfaction (1=tr√®s insatisfait, 5=tr√®s satisfait)"
        },
        "comment": {
          "type": "string",
          "maxLength": 200,
          "description": "Commentaire libre sur l'humeur"
        }
      }
    },
    "progress": {
      "type": "object",
      "description": "Progression de la journ√©e",
      "properties": {
        "scenesCompleted": {
          "type": "integer",
          "minimum": 0,
          "description": "Nombre de sc√®nes compl√©t√©es aujourd'hui"
        },
        "currentScene": {
          "type": "integer",
          "description": "Sc√®ne actuelle"
        },
        "blockers": {
          "type": "array",
          "description": "Points de blocage rencontr√©s",
          "items": {
            "type": "string"
          }
        },
        "achievements": {
          "type": "array",
          "description": "R√©ussites notables du jour",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "collaboration": {
      "type": "object",
      "description": "Aspects collaboratifs de la journ√©e",
      "properties": {
        "helpedOthers": {
          "type": "boolean",
          "description": "A aid√© d'autres √©tudiants"
        },
        "receivedHelp": {
          "type": "boolean",
          "description": "A re√ßu de l'aide"
        },
        "teamWork": {
          "type": "string",
          "maxLength": 200,
          "description": "Commentaire sur le travail d'√©quipe"
        },
        "mentorPoints": {
          "type": "integer",
          "minimum": 0,
          "description": "Points mentor gagn√©s aujourd'hui"
        }
      }
    },
    "suggestions": {
      "type": "object",
      "description": "Suggestions d'am√©lioration",
      "properties": {
        "content": {
          "type": "string",
          "maxLength": 500,
          "description": "Suggestions pour am√©liorer le contenu"
        },
        "pace": {
          "enum": ["too_slow", "just_right", "too_fast"],
          "description": "Feedback sur le rythme"
        },
        "support": {
          "type": "string",
          "maxLength": 500,
          "description": "Suggestions pour le support formateur"
        }
      }
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "Date et heure de soumission"
    },
    "aggregated": {
      "type": "boolean",
      "default": false,
      "description": "Si l'entr√©e a √©t√© incluse dans l'agr√©gation formateur"
    },
    "aggregationTags": {
      "type": "array",
      "description": "Tags automatiques pour l'agr√©gation",
      "items": {
        "type": "string",
        "examples": ["async_confusion", "types_difficulty", "pace_too_fast", "need_more_examples"]
      }
    },
    "visibility": {
      "enum": ["private", "formateur", "team", "public"],
      "default": "formateur",
      "description": "Niveau de visibilit√© de la r√©tro"
    },
    "formateurNotes": {
      "type": "string",
      "maxLength": 500,
      "description": "Notes du formateur sur cette entr√©e"
    },
    "followUp": {
      "type": "object",
      "description": "Actions de suivi",
      "properties": {
        "required": {
          "type": "boolean",
          "description": "N√©cessite un suivi"
        },
        "action": {
          "type": "string",
          "description": "Action √† prendre"
        },
        "assignedTo": {
          "type": "string",
          "description": "Personne responsable du suivi"
        },
        "dueDate": {
          "type": "string",
          "format": "date"
        },
        "completed": {
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "examples": [
    {
      "id": "retro-j1-alice",
      "day": "J1",
      "student": {
        "name": "Alice",
        "team": "Team Alpha"
      },
      "learned": "J'ai compris comment les promises fonctionnent et pourquoi elles sont utiles pour g√©rer l'asynchrone",
      "fuzzy": "La diff√©rence entre .then() et async/await n'est pas totalement claire pour moi",
      "question": "Quand doit-on pr√©f√©rer les callbacks aux promises?",
      "mood": {
        "emoji": "üòä",
        "level": 4,
        "comment": "Journ√©e productive, j'ai bien avanc√©"
      },
      "progress": {
        "scenesCompleted": 6,
        "currentScene": 7,
        "blockers": ["Confusion sur les types TypeScript"],
        "achievements": ["Premier troph√©e gagn√©!", "Acte I termin√©"]
      },
      "collaboration": {
        "helpedOthers": true,
        "receivedHelp": true,
        "teamWork": "Bob m'a aid√© sur la sc√®ne 5, tr√®s sympa",
        "mentorPoints": 1
      },
      "suggestions": {
        "pace": "just_right",
        "content": "Plus d'exemples sur les promises seraient utiles"
      },
      "timestamp": "2025-09-06T17:15:00Z",
      "aggregated": false,
      "aggregationTags": ["async_confusion", "types_difficulty"],
      "visibility": "formateur"
    },
    {
      "id": "retro-j2-david",
      "day": "J2",
      "student": {
        "name": "David",
        "team": "Team Charlie"
      },
      "learned": "Les hooks React sont plus simples que je ne pensais, useState est vraiment intuitif",
      "fuzzy": "useEffect et ses d√©pendances restent myst√©rieux",
      "question": "Comment d√©bugger quand useEffect boucle infiniment?",
      "mood": {
        "emoji": "üòü",
        "level": 3,
        "comment": "Difficile en remote, je me sens un peu isol√©"
      },
      "progress": {
        "scenesCompleted": 3,
        "currentScene": 11,
        "blockers": ["Probl√®me de connexion", "Confusion sur les reducers"],
        "achievements": ["Badge Sprinteur obtenu"]
      },
      "collaboration": {
        "helpedOthers": false,
        "receivedHelp": false,
        "teamWork": "Difficile de collaborer √† distance"
      },
      "suggestions": {
        "pace": "too_fast",
        "support": "Plus de check-ins en remote seraient appr√©ci√©s"
      },
      "timestamp": "2025-09-07T17:00:00Z",
      "aggregated": true,
      "aggregationTags": ["remote_difficulty", "pace_too_fast", "hooks_confusion"],
      "visibility": "formateur",
      "followUp": {
        "required": true,
        "action": "Session de rattrapage sur les hooks",
        "assignedTo": "Formateur",
        "dueDate": "2025-09-08"
      }
    }
  ]
}